// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Re:Fuel API
 *
 * コンプレックスを燃料に変える自己進化アプリ「Re:Fuel」のAPI仕様書です。 MVP（Minimum Viable Product）の機能を対象としています。 
 *
 * API version: v1.0.0
 */

package refuelapi

import (
	"context"
	"net/http"
	"errors"
)

// GoalsAPIService is a service that implements the logic for the GoalsAPIServicer
// This service should implement the business logic for every endpoint for the GoalsAPI API.
// Include any external packages or services that will be required by this service.
type GoalsAPIService struct {
}

// NewGoalsAPIService creates a default api service
func NewGoalsAPIService() *GoalsAPIService {
	return &GoalsAPIService{}
}

// GoalsGet - 登録されている目標の一覧を取得
func (s *GoalsAPIService) GoalsGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update GoalsGet with the required logic for this service method.
	// Add api_goals_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Goal{}) or use other options such as http.Ok ...
	// return Response(200, []Goal{}), nil

	// TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	// return Response(401, Error{}), nil

	// TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	// return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GoalsGet method not implemented")
}

// GoalsPost - 新しい目標を登録
func (s *GoalsAPIService) GoalsPost(ctx context.Context, goalInput GoalInput) (ImplResponse, error) {
	// TODO - update GoalsPost with the required logic for this service method.
	// Add api_goals_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Goal{}) or use other options such as http.Ok ...
	// return Response(201, Goal{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	// return Response(401, Error{}), nil

	// TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	// return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GoalsPost method not implemented")
}

// GoalsGoalIdGet - 指定されたIDの目標情報を取得
func (s *GoalsAPIService) GoalsGoalIdGet(ctx context.Context, goalId int64) (ImplResponse, error) {
	// TODO - update GoalsGoalIdGet with the required logic for this service method.
	// Add api_goals_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Goal{}) or use other options such as http.Ok ...
	// return Response(200, Goal{}), nil

	// TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	// return Response(401, Error{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GoalsGoalIdGet method not implemented")
}

// GoalsGoalIdPut - 既存の目標情報を更新
func (s *GoalsAPIService) GoalsGoalIdPut(ctx context.Context, goalId int64, goalInput GoalInput) (ImplResponse, error) {
	// TODO - update GoalsGoalIdPut with the required logic for this service method.
	// Add api_goals_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Goal{}) or use other options such as http.Ok ...
	// return Response(200, Goal{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	// return Response(401, Error{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GoalsGoalIdPut method not implemented")
}

// GoalsGoalIdDelete - 既存の目標を削除
func (s *GoalsAPIService) GoalsGoalIdDelete(ctx context.Context, goalId int64) (ImplResponse, error) {
	// TODO - update GoalsGoalIdDelete with the required logic for this service method.
	// Add api_goals_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	// return Response(401, Error{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GoalsGoalIdDelete method not implemented")
}
