// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Re:Fuel API
 *
 * コンプレックスを燃料に変える自己進化アプリ「Re:Fuel」のAPI仕様書です。 MVP（Minimum Viable Product）の機能を対象としています。 
 *
 * API version: v1.0.0
 */

package refuelapi

import (
	"context"
	"net/http"
	"errors"
)

// ComplexesAPIService is a service that implements the logic for the ComplexesAPIServicer
// This service should implement the business logic for every endpoint for the ComplexesAPI API.
// Include any external packages or services that will be required by this service.
type ComplexesAPIService struct {
}

// NewComplexesAPIService creates a default api service
func NewComplexesAPIService() *ComplexesAPIService {
	return &ComplexesAPIService{}
}

// ComplexesGet - 登録されているコンプレックスの一覧を取得
func (s *ComplexesAPIService) ComplexesGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update ComplexesGet with the required logic for this service method.
	// Add api_complexes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Complex{}) or use other options such as http.Ok ...
	// return Response(200, []Complex{}), nil

	// TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	// return Response(401, Error{}), nil

	// TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	// return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ComplexesGet method not implemented")
}

// ComplexesPost - 新しいコンプレックスを登録
func (s *ComplexesAPIService) ComplexesPost(ctx context.Context, complexInput ComplexInput) (ImplResponse, error) {
	// TODO - update ComplexesPost with the required logic for this service method.
	// Add api_complexes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Complex{}) or use other options such as http.Ok ...
	// return Response(201, Complex{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	// return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ComplexesPost method not implemented")
}

// ComplexesComplexIdGet - 指定されたIDのコンプレックス情報を取得します。
func (s *ComplexesAPIService) ComplexesComplexIdGet(ctx context.Context, complexId int64) (ImplResponse, error) {
	// TODO - update ComplexesComplexIdGet with the required logic for this service method.
	// Add api_complexes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Complex{}) or use other options such as http.Ok ...
	// return Response(200, Complex{}), nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	// return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ComplexesComplexIdGet method not implemented")
}

// ComplexesComplexIdPut - 既存のコンプレックス情報を更新します。
func (s *ComplexesAPIService) ComplexesComplexIdPut(ctx context.Context, complexId int64, complexInput ComplexInput) (ImplResponse, error) {
	// TODO - update ComplexesComplexIdPut with the required logic for this service method.
	// Add api_complexes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Complex{}) or use other options such as http.Ok ...
	// return Response(200, Complex{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	// return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ComplexesComplexIdPut method not implemented")
}

// ComplexesComplexIdDelete - 既存のコンプレックスを削除します。
func (s *ComplexesAPIService) ComplexesComplexIdDelete(ctx context.Context, complexId int64) (ImplResponse, error) {
	// TODO - update ComplexesComplexIdDelete with the required logic for this service method.
	// Add api_complexes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	// return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ComplexesComplexIdDelete method not implemented")
}
