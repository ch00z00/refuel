// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Re:Fuel API
 *
 * コンプレックスを燃料に変える自己進化アプリ「Re:Fuel」のAPI仕様書です。 MVP（Minimum Viable Product）の機能を対象としています。 
 *
 * API version: v1.0.0
 */

package refuelapi

import (
	"net/http"
	"strings"
)

// BadgesAPIController binds http requests to an api service and writes the service results to the http response
type BadgesAPIController struct {
	service BadgesAPIServicer
	errorHandler ErrorHandler
}

// BadgesAPIOption for how the controller is set up.
type BadgesAPIOption func(*BadgesAPIController)

// WithBadgesAPIErrorHandler inject ErrorHandler into controller
func WithBadgesAPIErrorHandler(h ErrorHandler) BadgesAPIOption {
	return func(c *BadgesAPIController) {
		c.errorHandler = h
	}
}

// NewBadgesAPIController creates a default api controller
func NewBadgesAPIController(s BadgesAPIServicer, opts ...BadgesAPIOption) *BadgesAPIController {
	controller := &BadgesAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the BadgesAPIController
func (c *BadgesAPIController) Routes() Routes {
	return Routes{
		"GetBadges": Route{
			strings.ToUpper("Get"),
			"/api/v1/badges",
			c.GetBadges,
		},
	}
}

// GetBadges - 利用可能なバッジの一覧を取得
func (c *BadgesAPIController) GetBadges(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetBadges(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	_ = EncodeJSONResponse(result.Body, &result.Code, w)
}
